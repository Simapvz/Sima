---
title: "Class 6: R function"
author: "Sima Parvizi Omran PID: A69027639"
format: pdf
---
## ALL about functions in R 


every functions in R has at leasr 3 things: 
- name (you pick it)
- argumanets (the input(s) to your function), and 
- body.




# Example input vectors to start with
student1 <- c(100, 100, 100, 100, 100, 100, 100, 90).
student2 <- c(100, NA, 90, 90, 90, 90, 97, 80).
student3 <- c(90, NA, NA, NA, NA, NA, NA, NA).
## Quarto
```{r}
# Example input vectors to start with
student1 <- c(100, 100, 100, 100, 100, 100, 100, 90)
student2 <- c(100, NA, 90, 90, 90, 90, 97, 80)
student3 <- c(90, NA, NA, NA, NA, NA, NA, NA)
```
```{r}
mean(student1)
```

i found the function 'which.min()' let's try it out
```{r}
student1
min(student1)
which.min(student1)
```

  
  
  
  >Q1. Write a function grade() to determine an overall grade from a vector of student homework
assignment scores dropping the lowest single score. If a student misses a homework (i.e. has an
NA value) this can be used as a score to be potentially dropped. Your final function should be
adquately explained with code comments and be able to work on an example class gradebook
such as this one in CSV format: “https://tinyurl.com/gradeinput” [3pts]


```{r}
student3[is.na(student3)] <- 0
mean(student3[-which.min(student3)])
```

```{r}
grade <- function(x) {
  x[is.na(x)] <- 0
  mean(x[-which.min(x)])
}

grade(student3)
```


```{r}
gradebook <- read.csv("https://tinyurl.com/gradeinput", row.names =1)

gradebook
```
```{r}
ans <- apply(gradebook, 1, grade)
ans
```
>Q2. Using your grade() function and the supplied gradebook, Who is the top scoring student
overall in the gradebook?

```{r}
which.max(ans)
```
>Q3. From your analysis of the gradebook, which homework was toughest on students (i.e. obtained
the lowest scores overall? [2pts]

let's mask the NA valus to zero.

```{r}
mask <- gradebook
mask[is.na(mask)] <- 0
mask
```

```{r}
which.min(apply(mask, 2,mean))
```





  
we can "mask"the NA or change them to be zero. The rational here is if you don' do a hw you get zero. 
let's put the use of 'which.min()', minus indexing and ;minus indexing and 'mean()' together to solve this body. 

mean( student1{})

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.

## Running Code

When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:

Using your grade() function and the supplied gradebook, Who is the top scoring student
overall in the gradebook? [3pts]

```{r}
apply(gradebook, 1,grade)
```



You can add options to executable code like this 

```{r}
#| echo: false
2 * 2
```

The `echo: false` option disables the printing of code (only output is displayed).
